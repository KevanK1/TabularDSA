<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>TabularDSA - Assign Teachers</title>
    <!-- Tailwind CSS CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- GSAP CDN -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js"></script>
    <!-- Montserrat and Poppins Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100..900;1,100..900&family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
      rel="stylesheet"
    />
    <style>
      /* Ensure the footer SVG stretches and only shows the wave */
      .wave-footer {
        position: relative;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 400px; /* Adjust based on the actual wave height */
        overflow: hidden;
      }
      .wave-footer img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        object-position: bottom;
      }
      /* Glassmorphism Button Styles */
      .glass-btn {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(10px);
        -webkit-backdrop-filter: blur(10px);
        border: 2px solid rgba(255, 255, 255, 0.5);
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease;
      }
      .glass-btn:hover {
        background: rgba(255, 255, 255, 0.3);
        border-color: rgba(255, 255, 255, 0.7);
        transform: translateY(-2px);
        box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
      }
      /* Subject Button Styles */
      .subject-btn.active {
        background: rgba(255, 255, 255, 0.4);
        border-color: rgba(255, 255, 255, 0.8);
      }
      /* Teacher List Styles */
      .teacher-list {
        max-height: 400px;
        overflow-y: auto;
        border: 2px solid rgba(255, 255, 255, 0.5);
        border-radius: 10px;
        padding: 10px;
      }
      .teacher-item {
        display: flex;
        align-items: center;
        padding: 5px 0;
        border-bottom: 1px solid rgba(255, 255, 255, 0.2);
      }
      .teacher-item input[type="checkbox"] {
        margin-right: 10px;
      }
    </style>
  </head>
  <body class="bg-black min-h-screen flex flex-col items-center justify-center overflow-x-hidden">
    <!-- Main Content -->
    <div class="container mx-auto text-white text-center py-20">
      <!-- Hero Text -->
      <h1
        class="text-[20vw] font-bold uppercase leading-none mb-12"
        style="
          font-family: Poppins, sans-serif;
          font-weight: 500;
          font-style: italic;
        "
      >
        <span>a</span><span>s</span><span>s</span><span>i</span><span>g</span><span>n</span>
      </h1>

      <!-- Subtext -->
      <p class="text-[2.5vw] uppercase mb-20">assign teachers to subjects</p>

      <!-- Subject Selection -->
      <div class="mb-10">
        <h2 class="text-[2vw] uppercase text-red-500 mb-4">Subject's Teacher Selection Page</h2>
        <div class="flex flex-wrap justify-center mb-4">
          <% subjects.forEach(subject => { %>
            <button
              class="subject-btn <%= selectedSubject && selectedSubject._id.toString() === subject._id.toString() ? 'active' : '' %>"
              data-subject-id="<%= subject._id %>"
            >
              <%= subject.name %> (<%= subject.code %>)
            </button>
          <% }); %>
        </div>
      </div>

      <!-- Teacher Assignment Form -->
      <form id="assignForm" action="/assign" method="POST" class="w-full max-w-2xl">
        <input type="hidden" name="subjectId" id="selectedSubjectId" value="">
        <div class="mb-4">
          <input
            type="text"
            id="teacherSearch"
            placeholder="Search"
            class="w-full p-2 bg-black border-2 border-white rounded text-white"
            onkeyup="filterTeachers()"
          />
        </div>
        <div class="teacher-list">
          <% teachers.forEach(teacher => { %>
            <label class="teacher-item">
              <input type="checkbox" name="teacherIds" value="<%= teacher._id %>">
              <%= teacher.mis_id %> <%= teacher.name %> (<%= teacher.email %>)
            </label>
          <% }); %>
        </div>
        <button
          type="submit"
          class="glass-btn mt-10 text-[2.5vw] uppercase text-black font-bold py-3 px-6 rounded"
        >
          Assign
        </button>
      </form>
    </div>

    <!-- Wave Footer -->
    <div class="wave-footer">
      <img
        src="../assets/layered-peaks-haikei.svg"
        alt="Wave Footer"
        class="w-full h-full"
      />
    </div>

    <script>
      // GSAP Animation for "assign" with Stagger and Blink
      gsap.from("h1 span", {
        opacity: 0,
        y: 50,
        duration: 0.8,
        stagger: 0.1,
        ease: "back.out(1.7)",
        onStart: function () {
          gsap.to("h1 span", {
            keyframes: [
              { opacity: 0, duration: 0.2 },
              { opacity: 1, duration: 0.2 },
              { opacity: 0, duration: 0.2 },
              { opacity: 1, duration: 0.2 },
            ],
            stagger: 0.1,
            repeat: 1,
            delay: 0.5,
          });
        },
      });

      gsap.from("p", {
        opacity: 0,
        y: 30,
        duration: 1,
        delay: 0.8,
        ease: "power2.out",
      });
      gsap.from(".space-y-6 div", {
        opacity: 0,
        y: 20,
        duration: 0.8,
        stagger: 0.2,
        delay: 1.0,
        ease: "power2.out",
      });
      gsap.from(".glass-btn", {
        opacity: 0,
        scale: 0.9,
        duration: 0.8,
        delay: 1.6,
        ease: "elastic.out(1, 0.5)",
      });

      // Subject Button Click Handler
      document.querySelectorAll('.subject-btn').forEach(button => {
        button.addEventListener('click', () => {
          document.querySelectorAll('.subject-btn').forEach(btn => btn.classList.remove('active'));
          button.classList.add('active');
          document.getElementById('selectedSubjectId').value = button.getAttribute('data-subject-id');
        });
      });

      // Teacher Search Filter
      function filterTeachers() {
        const input = document.getElementById('teacherSearch');
        const filter = input.value.toLowerCase();
        const teacherItems = document.querySelectorAll('.teacher-item');

        teacherItems.forEach(item => {
          const text = item.textContent.toLowerCase();
          item.style.display = text.includes(filter) ? '' : 'none';
        });
      }
    </script>
  </body>
</html>